How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it helped me see the modifications made on the old version that may cause the bug so I checked them untl I found the bug

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    comparing versions to find bugs - reverting to older version - concurrent development

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	having versions automatically can create non-meaningful versions like saving version while the developer is still writing
	
	so the version doesn't necessarily reflect logical change where version control makes sense only when versions are logical
	
	and meaningful , on the other hand choosing when to create a commit is more flexible and gives the developer more control
	
	over tracking versions that reflects logical changes but the developer should be aware of when to create a commit and shouldn't 

	forget doing it . 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	because Git is code-oriented and project repository contains multiple files that are interrelated and sometimes modifying one of them
	requires modifying the others thus keep tracking of all the modified files but google docs aren't meant for coding so it doesn't offer 		this feature.

How can you use the commands git log and git diff to view the history of files?

	git log  -> to view the history of git commits
	git log --stat -> to view the history of git commits with some information about them
	git diff first_id second_id -> to view the changes introduced between these two commits . 

How might using version control make you more confident to make changes that
could break something?

	If made something wrong that caused a bug , I can revert back to the older version where everything was ok.

Now that you have your workspace set up, what do you want to try using Git for?

	for version control of computer vision , machine learning and deep learning projects
